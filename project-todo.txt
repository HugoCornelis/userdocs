-*- outline -*-

* TODO list
** check if dist target works
*** packages
**** installer
**** model-container
**** heccer
**** ssp
**** ns-sli
**** gshell
**** userdocs
*** tests to perform
**** make dist in each directory
**** neurospaces_dist
** Performance benchmarks for purkinje cell
G2, NS-SLI, SSP, gshell.
** Twitter account by Mando
** construct a test report for beta-testers
*** automated testing
**** How many test failure have been reported.
*** manual testing (optional, if the automated testing gives problems)
**** ls /usr/local/neurospaces/models/library/tests/cells/singlep.ndf
**** heccer --version
**** ssp --version
**** ssp --cell tests/cells/singlep.ndf --dump
**** neurospaces --version
**** neurospaces --query cells/purkinje/edsjb1994.ndf
***** segmentcount /Purkinje
***** quit
**** neurospaces --gui cells/purkinje/edsjb1994.ndf
**** ns-sli
***** quit
**** genesis-g3 --version
**** genesis-g3
***** list components
***** list commands
***** help command sli_load
**** userdocs-version
** Document that describes the release
*** Compile a list of G3 capabilities
**** compile them from each of the components
*** Make statements about
**** backward compatibility
***** clarify the level of backward compatibility 
***** emphasize on commitment of backward compatibility
***** explain policies for feature requests
***** rallpacks
***** does the purkinje cell and its various stimulation protocols
***** please try your simulations and report problems
**** NeuroML support
**** PyNN support
***** placeholder for an interface to PyNN through the pynn_load command
*** Installation
**** Compile a list of dependencies
**** Create an integrated installation tar ball or so.
**** add deb and rpm packages
http://www.artificialworlds.net/blog/2007/02/22/creating-deb-and-rpm-packages/
**** Release plan: alpha, beta, full release
**** synchronize userdocs and wiki installation docs
*** mailing lists, discussion boards and other genesis related systems
**** what are they used for?
**** what do we want them to be used for? why?
**** Add hg repository
**** Add bulletin boards and mailing lists
**** Add NS related systems
***** www.neurospaces.org
***** blog
*** alpha: Mid-October
*** beta1: Mid-January
*** beta2: Mid-March
*** full: Mid-July
** Documentation
*** Generate a package from the current documentation
**** deb files, rpm files, tar ball
**** Generate technical specification manuals, level 4
***** for the gshell
***** ssp?
***** model-container?
***** heccer?
***** g-tube?
** TODOs
*** Integrate this TODO list with the roadmap of the genesis grant
*** based on user workflow
*** TODOs based on CBI architecture components (go through TODO.txt files)
**** Configurator
**** Dash
**** Peccer / Thredder
*** Go through wiki and compare with userdocs documentation
*** GUI TODOs for single neuron modeling
** test on different architectures
*** compile a list of architectures we can test.
*** compile a list of architectures we want to test on.
** test backward compatibility for tutorial scripts
*** compile list of scripts we would like to test
*** implement ns-sli showfield command
** add rallpacks
** test interfacing with neuroconstruct
** correct bad links reported by webcheck
** Readline for the model-container
** setup bug / todo tracker, feature tracker and dependency tracker
** add meshing function
*** call neuroconstruct ?
*** call cvapp ?
*** other ?
** Add hg operations to neurospaces_build script
** Distinguish between userdocs_cron.pl and userdocs_cron.
** Add act_on_selection to the system
*** userdocs file selection
*** source code file selection
** construct a script for the automated inclusion of output of commands in the documentation.
*** Is this related to release-expand
Also inserts texts in existing documents.
** create a structure for progress reports to the supplement
** Integrate 'mtn clone' into the installer scripts
** Add network modeling support
*** DES
**** instantiation of DES queuer stand-alone (completed)
**** instantiation of DES distributor stand-alone (completed)
**** tests of DES stand-alone (completed)
*** model-container
**** instantiation of projections / connections by model-container (completed)
**** inspection of projections / connections by model-container API (completed)
*** SSP
**** instantiation of DES queuer from ssp (partial)
**** instantiation of DES distributor from ssp (partial)
**** translation of model-container connections to DES connections (partial)
**** tests for ssp
*** gshell
**** add integration commands to gshell
**** tests for gshell
*** backward compatibility
**** integration of planar / volume connect command
**** tests for backward compatibility

