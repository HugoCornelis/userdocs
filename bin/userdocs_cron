#!/usr/bin/perl


#                                                                                                          
# args ($sendto_email,$sendfrom_email,$subject,$message)                                                   
sub try_to_mail_status
{
    my $subject;
    my $message;
    my $sendto_email;
    my $sendfrom_email;

    if($sendto_email eq "")
    {
	return;
    }

    ($sendto_email,$sendfrom_email,$subject,$message) = @_;

    #todo figure out why I can't put the output of                                                          
    # `which sendmail` into a variable and put it in                                                        
    # place of the /usr/sbin/sendmail. A user may have                                                      
    # a different sendmail path.                                                                            

    # mando: perhaps you have to use chomp after using backquotes.

    open(MAIL, "|/usr/sbin/sendmail -oi -t");
    print MAIL "From: $sendfrom_email\n";
    print MAIL "To: $sendto_email\n";
    print MAIL "Subject: $subject\n\n";
    print MAIL "$message\n";
    close(MAIL);

}


$ENV{HOME}='/home/genesis';
$ENV{PATH} .= ':/bin:/usr/bin:/usr/local/bin';


system "neurospaces_pull --regex userdocs"; 

system "neurospaces_update --regex userdocs"; 

system "neurospaces_configure --regex userdocs";

system "neurospaces_install --regex userdocs";

system "make clean -C ~/neurospaces_project/userdocs/source/snapshots/0/";

system "make website-prepare -C ~/neurospaces_project/userdocs/source/snapshots/0/ > /tmp/userdocs_make.output";

#system "cat /tmp/userdocs_make.output |  mail -s \"userdocs has been built on darwin\" sysadminspam@gmail.com";

# TODO: Would be a good idea to make this destination directory on the copy configurable.
system "rm -rf ~/public_html/userdocs";
system "cp -rf ~/neurospaces_project/userdocs/source/snapshots/0/html/htdocs/neurospaces_project/userdocs/ ~/public_html/userdocs";

# now do a link check.
system "make webcheck -C ~/neurospaces_project/userdocs/source/snapshots/0/";

my $text = `cat /tmp/userdocs_make.output`;

try_to_mail_status("sysadminspam@gmail.com",
		   "userdocs@darwin.cbi.utsa.edu",
		   "Userdocs has been built on darwin.",
		   "Userdocs has finished building.\n\n" . $text);


system "rm -f /tmp/userdocs_make.output";



#
# ($config_file) a file with a configuration in it.
#
sub parse_config_file
{
  my $config_file = shift;

  if (! -e $config_file)
  {
      print "\n$config_file is an invalid filename\n";

      return;
  }

  print "\nParsing configuration in $config_file\n\n";

  $configuration = YAML::LoadFile($config_file);


  if(!defined $configuration)
  {

    print "This YAML file is invalid\n";
    return;

  }

  if(defined $configuration->{MAILTO})
  {
    chomp($configuration->{MAILTO});
    print "\tSend to email: $configuration->{MAILTO}\n";
  }

  if(defined $configuration->{MAILFROM})
  {
    chomp($configuration->{MAILFROM});
    print "\tSend from email: $configuration->{MAILFROM}\n";
  }

  if(defined $configuration->{OUTPUTDIR})
  {
      #! note that this overrides an option from set by the command line

      $option_output_directory = $configuration->{OUTPUTDIR};
      chomp($option_output_directory);
      print "\tOutput directory is $option_output_directory\n";
  }


  if(defined $configuration->{URL})
  {
      chomp($configuration->{URL});
      print "\tOutput directory for test harness output is $configuration->{URL}\n";
  }



  if(defined $configuration->{DOXYGENOUTPUT})
  {
      chomp($configuration->{DOXYGENOUTPUT});
      print "\tURL for serving the doxygen output is $configuration->{DOXYGENOUTPUT}\n";
  }


    if(defined $configuration->{DOXYGENURL})
  {
      chomp($configuration->{DOXYGENURL});
      print "\tOutput directory for doxygen is $configuration->{URL}\n";
  }


  if(defined $configuration->{REGTESTURL})
  {
      chomp($configuration->{REGTESTURL});
      print "\tURL for serving the regression tests is $configuration->{REGTESTURL}\n";
  }


  if(defined $configuration->{REGTESTOUTPUT})
  {
      chomp($configuration->{REGTESTOUTPUT});
      print "\tOutput directory for regression tests is $configuration->{DOXYGENOUTPUT}\n";
  }


  if(defined $configuration->{LOGROTATE})
  {

    chomp($configuration->{LOGROTATE});
    print "\tNumber of logs to rotate $configuration->{LOGROTATE}\n";

  }


  print "Done Parsing $config_file:\n";

}


